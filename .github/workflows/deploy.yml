name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        image:
          - name: latest
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8.dockerfile
          - name: python3.8
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8.dockerfile
          - name: python3.7
            python_version: "3.7"
            dockerfile: ./docker-images/python3.7.dockerfile
          - name: python3.6
            python_version: "3.6"
            dockerfile: ./docker-images/python3.6.dockerfile
          - name: python3.8-slim
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8-slim.dockerfile
          - name: python3.8-alpine3.10
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8-alpine3.10.dockerfile
          - name: python3.7-alpine3.8
            python_version: "3.7"
            dockerfile: ./docker-images/python3.7-alpine3.8.dockerfile
          - name: python3.6-alpine3.8
            python_version: "3.6"
            dockerfile: ./docker-images/python3.6-alpine3.8.dockerfile
      fail-fast: true
    runs-on: ubuntu-18.04
    steps:
      - name: Get date/time in ISO 8601 format
        run: echo DATE_ISO8601=$(date --iso-8601) >> $GITHUB_ENV
      - name: Get image repository
        run: echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME  }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get short commit SHA
        id: commit
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker-images
          file: ${{ matrix.image.dockerfile }}
          platforms: linux/amd64,linux/arm/v7
          pull: true
          push: true
          tags: |
            ${IMAGE_REPOSITORY}:${{ matrix.image.name }}
            ${IMAGE_REPOSITORY}:${{ matrix.image.name }}-${{ steps.date.outputs.iso8601 }}
