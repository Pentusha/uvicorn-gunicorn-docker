name: Test

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    strategy:
      matrix:
        image:
          - name: latest
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8.dockerfile
          - name: python3.8
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8.dockerfile
          - name: python3.7
            python_version: "3.7"
            dockerfile: ./docker-images/python3.7.dockerfile
          - name: python3.6
            python_version: "3.6"
            dockerfile: ./docker-images/python3.6.dockerfile
          - name: python3.8-slim
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8-slim.dockerfile
          - name: python3.8-alpine3.10
            python_version: "3.8"
            dockerfile: ./docker-images/python3.8-alpine3.10.dockerfile
          - name: python3.7-alpine3.8
            python_version: "3.7"
            dockerfile: ./docker-images/python3.7-alpine3.8.dockerfile
          - name: python3.6-alpine3.8
            python_version: "3.6"
            dockerfile: ./docker-images/python3.6-alpine3.8.dockerfile
      fail-fast: true
    runs-on: ubuntu-18.04
    steps:
      - name: Get image repository
        run: echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - name: Install Dependencies
        run: python3.7 -m pip install docker pytest
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker-images
          file: ${{ matrix.image.dockerfile }}
          platforms: linux/amd64,linux/arm/v7
          pull: true
          push: false
          tags: |
            ${{ env.IMAGE_REPOSITORY }}:${{ matrix.image.name }}
      - name: Test Image
        run: pytest tests
        env:
          PYTHON_VERSION: ${{ matrix.image.python_version }}
          DOCKER_IMAGE: ${{ env.IMAGE_REPOSITORY }}:${{ matrix.image.name }}
